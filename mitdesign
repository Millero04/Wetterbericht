<!DOCTYPE html>
<html lang="de">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>üå§Ô∏è Weather Report</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            color: #333;
            line-height: 1.6;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        .header {
            text-align: center;
            margin-bottom: 50px;
            animation: fadeInUp 1s ease-out;
        }

        .header h1 {
            font-size: 3.5rem;
            color: white;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
            margin-bottom: 10px;
            animation: pulse 2s infinite;
        }

        .header p {
            font-size: 1.2rem;
            color: rgba(255,255,255,0.9);
            font-weight: 300;
        }

        .weather-card {
            background: rgba(255,255,255,0.95);
            border-radius: 20px;
            padding: 30px;
            margin-bottom: 30px;
            box-shadow: 0 15px 35px rgba(0,0,0,0.1);
            backdrop-filter: blur(10px);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            animation: slideInUp 0.8s ease-out;
        }

        .weather-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 25px 50px rgba(0,0,0,0.15);
        }

        .card-title {
            display: flex;
            align-items: center;
            gap: 15px;
            margin-bottom: 25px;
            font-size: 1.8rem;
            color: #2c3e50;
            border-bottom: 3px solid #3498db;
            padding-bottom: 15px;
        }

        .emoji {
            font-size: 2rem;
            animation: bounce 4s ease-in-out infinite;
        }

        .table-container {
            overflow-x: auto;
            border-radius: 15px;
            box-shadow: 0 8px 25px rgba(0,0,0,0.1);
            margin-bottom: 20px;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            background: white;
            border-radius: 15px;
            overflow: hidden;
        }

        th {
            background: linear-gradient(135deg, #3498db, #2980b9);
            color: white;
            padding: 18px 15px;
            text-align: left;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            font-size: 0.9rem;
        }

        td {
            padding: 15px;
            border-bottom: 1px solid #ecf0f1;
            transition: background-color 0.3s ease;
        }

        tr:hover td {
            background-color: #f8f9fa;
        }

        .action-btn {
            background: linear-gradient(135deg, #e74c3c, #c0392b);
            color: white;
            border: none;
            padding: 8px 15px;
            border-radius: 25px;
            cursor: pointer;
            font-size: 0.85rem;
            margin: 0 5px;
            transition: all 0.3s ease;
            font-weight: 500;
        }

        .action-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(231, 76, 60, 0.4);
        }

        .edit-btn {
            background: linear-gradient(135deg, #f39c12, #e67e22);
        }

        .edit-btn:hover {
            box-shadow: 0 5px 15px rgba(243, 156, 18, 0.4);
        }

        .add-link {
            display: inline-flex;
            align-items: center;
            gap: 10px;
            background: linear-gradient(135deg, #27ae60, #2ecc71);
            color: white;
            text-decoration: none;
            padding: 15px 25px;
            border-radius: 30px;
            font-weight: 600;
            transition: all 0.3s ease;
            box-shadow: 0 8px 25px rgba(46, 204, 113, 0.3);
        }

        .add-link:hover {
            transform: translateY(-3px);
            box-shadow: 0 15px 35px rgba(46, 204, 113, 0.4);
        }

        .form-container {
            background: rgba(255,255,255,0.95);
            border-radius: 20px;
            padding: 40px;
            box-shadow: 0 15px 35px rgba(0,0,0,0.1);
            backdrop-filter: blur(10px);
        }

        .form-group {
            margin-bottom: 25px;
        }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            color: #2c3e50;
            font-weight: 600;
            font-size: 1.1rem;
        }

        .form-input {
            width: 100%;
            padding: 15px 20px;
            border: 2px solid #ecf0f1;
            border-radius: 15px;
            font-size: 1rem;
            transition: all 0.3s ease;
            background: rgba(255,255,255,0.8);
            box-shadow: 0 5px 15px rgba(0,0,0,0.05);
        }

        .form-input:focus {
            outline: none;
            border-color: #3498db;
            box-shadow: 0 8px 25px rgba(52, 152, 219, 0.2);
            transform: translateY(-2px);
        }

        textarea.form-input {
            resize: vertical;
            min-height: 120px;
        }

        .submit-btn {
            background: linear-gradient(135deg, #9b59b6, #8e44ad);
            color: white;
            border: none;
            padding: 18px 40px;
            border-radius: 30px;
            font-size: 1.1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 8px 25px rgba(155, 89, 182, 0.3);
            width: 100%;
        }

        .submit-btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 15px 35px rgba(155, 89, 182, 0.4);
        }

        .weather-images {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-top: 30px;
        }

        .weather-location {
            text-align: center;
            background: rgba(255,255,255,0.9);
            border-radius: 15px;
            padding: 20px;
            box-shadow: 0 8px 25px rgba(0,0,0,0.1);
            transition: transform 0.3s ease;
        }

        .weather-location:hover {
            transform: scale(1.05);
        }

        .location-image {
            width: 100%;
            height: 150px;
            object-fit: cover;
            border-radius: 10px;
            margin-bottom: 15px;
        }

        .location-name {
            font-weight: 600;
            color: #2c3e50;
            font-size: 1.1rem;
        }

        .swiss-showcase {
            margin-top: 50px;
        }

        .showcase-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 25px;
            margin-top: 30px;
        }

        .showcase-item {
            background: rgba(255,255,255,0.9);
            border-radius: 15px;
            overflow: hidden;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
            transition: transform 0.3s ease;
        }

        .showcase-item:hover {
            transform: translateY(-8px);
        }

        .showcase-image {
            width: 100%;
            height: 200px;
            background: linear-gradient(45deg, #74b9ff, #0984e3);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 4rem;
            color: white;
        }

        .showcase-content {
            padding: 20px;
            text-align: center;
        }

        .showcase-title {
            font-size: 1.3rem;
            font-weight: 600;
            color: #2c3e50;
            margin-bottom: 10px;
        }

        .showcase-desc {
            color: #7f8c8d;
            font-size: 0.95rem;
        }

        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @keyframes slideInUp {
            from {
                opacity: 0;
                transform: translateY(50px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @keyframes pulse {
            0%, 100% {
                transform: scale(1);
            }
            50% {
                transform: scale(1.02);
            }
        }

        @keyframes bounce {
            0%, 100% {
                transform: translateY(0);
            }
            50% {
                transform: translateY(-3px);
            }
        }

        @media (max-width: 768px) {
            .header h1 {
                font-size: 2.5rem;
            }
            
            .weather-card {
                padding: 20px;
            }
            
            .card-title {
                font-size: 1.5rem;
            }
            
            .container {
                padding: 15px;
            }
            
            th, td {
                padding: 12px 8px;
                font-size: 0.9rem;
            }
        }
    </style>
</head>

<body>
    <div class="container">
        <div class="header">
            <h1>üå§Ô∏è Weather Report</h1>
            <p>Ihr lokaler Wetterbericht aus der Schweiz</p>
        </div>

        <!-- Temperature Data Section -->
        <div class="weather-card">
            <h2 class="card-title">
                <span class="emoji">üå°Ô∏è</span>
                Temperatur √úbersicht
            </h2>
            
            <!-- Add Temperature Form -->
            <div class="form-container" style="margin-bottom: 30px;">
                <h3 style="color: #2c3e50; margin-bottom: 20px;">üìù Neue Temperatur hinzuf√ºgen</h3>
                <form id="tempForm" onsubmit="submitTempForm(event)">
                    <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 20px;">
                        <div class="form-group">
                            <label for="datum">üìÖ Datum:</label>
                            <input type="date" id="datum" name="datum" class="form-input" required>
                        </div>
                        <div class="form-group">
                            <label for="hoechsteTemp">üî• H√∂chste Temperatur (¬∞C):</label>
                            <input type="number" id="hoechsteTemp" name="hoechsteTemp" class="form-input" placeholder="z.B. 25" required>
                        </div>
                        <div class="form-group">
                            <label for="tiefsteTemp">‚ùÑÔ∏è Tiefste Temperatur (¬∞C):</label>
                            <input type="number" id="tiefsteTemp" name="tiefsteTemp" class="form-input" placeholder="z.B. 12" required>
                        </div>
                    </div>
                    <button type="submit" class="submit-btn" style="margin-top: 15px;">‚ûï Temperatur hinzuf√ºgen</button>
                </form>
            </div>

            <div class="table-container">
                <table>
                    <thead>
                        <tr>
                            <th>üìÖ Datum</th>
                            <th>üî• H√∂chste Temperatur</th>
                            <th>‚ùÑÔ∏è Tiefste Temperatur</th>
                            <th>Aktionen</th>
                        </tr>
                    </thead>
                    <tbody id="tableBody">
                        <!-- Temperature data will be loaded here -->
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Cities Section -->
        <div class="weather-card">
            <h2 class="card-title">
                <span class="emoji">üèîÔ∏è</span>
                Schweizer Wetter-Standorte
            </h2>
            
            <!-- Add City Form -->
            <div class="form-container" style="margin-bottom: 30px;">
                <h3 style="color: #2c3e50; margin-bottom: 20px;">üèôÔ∏è Neue Stadt hinzuf√ºgen</h3>
                <form id="cityForm" onsubmit="submitCityForm(event)">
                    <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 20px;">
                        <div class="form-group">
                            <label for="stadt">üèôÔ∏è Stadt:</label>
                            <input type="text" id="stadt" name="stadt" class="form-input" placeholder="z.B. Z√ºrich" required>
                        </div>
                        <div class="form-group">
                            <label for="land">üá®üá≠ Land:</label>
                            <input type="text" id="land" name="land" class="form-input" placeholder="z.B. Schweiz" required>
                        </div>
                        <div class="form-group">
                            <label for="bild">üì∏ Bild hochladen:</label>
                            <input type="file" id="bild" name="bild" class="form-input" accept="image/*">
                        </div>
                    </div>
                    <button type="submit" class="submit-btn" style="margin-top: 15px;">‚ûï Stadt hinzuf√ºgen</button>
                </form>
            </div>

            <div class="table-container">
                <table>
                    <thead>
                        <tr>
                            <th>üèôÔ∏è Stadt</th>
                            <th>üá®üá≠ Land</th>
                            <th>üì∏ Bild</th>
                            <th>Aktionen</th>
                        </tr>
                    </thead>
                    <tbody id="tableBody2">
                        <!-- City data will be loaded here -->
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Swiss Weather Showcase -->
        <div class="weather-card swiss-showcase">
            <h2 class="card-title">
                <span class="emoji">üèîÔ∏è</span>
                Beliebte Schweizer Wetter-Regionen
            </h2>
            <div class="showcase-grid">
                <div class="showcase-item">
                    <div class="showcase-image">üèîÔ∏è</div>
                    <div class="showcase-content">
                        <div class="showcase-title">Zermatt</div>
                        <div class="showcase-desc">Alpines Klima mit spektakul√§rem Matterhorn-Blick</div>
                    </div>
                </div>
                <div class="showcase-item">
                    <div class="showcase-image">üåä</div>
                    <div class="showcase-content">
                        <div class="showcase-title">Genfersee</div>
                        <div class="showcase-desc">Mildes Seeklima am wundersch√∂nen Genfersee</div>
                    </div>
                </div>
                <div class="showcase-item">
                    <div class="showcase-image">üå≤</div>
                    <div class="showcase-content">
                        <div class="showcase-title">Schwarzwald</div>
                        <div class="showcase-desc">Waldklima mit frischer Bergluft</div>
                    </div>
                </div>
                <div class="showcase-item">
                    <div class="showcase-image">üèôÔ∏è</div>
                    <div class="showcase-content">
                        <div class="showcase-title">Z√ºrich</div>
                        <div class="showcase-desc">St√§dtisches Klima im Herzen der Schweiz</div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Contact Form -->
        <div class="weather-card">
            <h2 class="card-title">
                <span class="emoji">üìß</span>
                Kontaktieren Sie uns
            </h2>
            <div class="form-container">
                <form id="contactForm" onsubmit="submitForm(event)">
                    <div class="form-group">
                        <label for="name">üë§ Name:</label>
                        <input type="text" id="name" name="name" class="form-input" required>
                    </div>
                    <div class="form-group">
                        <label for="email">üìß Email:</label>
                        <input type="email" id="email" name="email" class="form-input" required>
                    </div>
                    <div class="form-group">
                        <label for="message">üí¨ Nachricht:</label>
                        <textarea id="message" name="message" class="form-input" required placeholder="Teilen Sie uns Ihre Wetterbeobachtungen mit..."></textarea>
                    </div>
                    <button type="submit" class="submit-btn">‚úâÔ∏è Nachricht senden</button>
                </form>
            </div>
        </div>

        <!-- Contact Messages Table -->
        <div class="weather-card">
            <h2 class="card-title">
                <span class="emoji">üìù</span>
                Eingegangene Nachrichten
            </h2>
            <div class="table-container">
                <table>
                    <thead>
                        <tr>
                            <th>üë§ Name</th>
                            <th>üìß Email</th>
                            <th>üí¨ Nachricht</th>
                        </tr>
                    </thead>
                    <tbody id="tableBody3">
                        <!-- Contact messages will be loaded here -->
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- PocketBase SDK -->
    <script src="https://unpkg.com/pocketbase@0.7.11/pocketbase.min.js"></script>
    <script>
        let item = null;

        function fetchTempData() {
            fetch('https://pb02.toiwxr.easypanel.host/api/collections/Temperatur/records', {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
                .then(response => response.json())
                .then(data => {
                    displayTempData(data);
                })
                .catch((error) => {
                    alert('Ein Fehler beim Laden der Daten ist aufgetreten. Bitte versuchen Sie es sp√§ter erneut.');
                    console.error('Error:', error);
                });
        }

        function fetchStadtData() {
            fetch('https://pb02.toiwxr.easypanel.host/api/collections/Ortschaft/records', {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
                .then(response => response.json())
                .then(data => {
                    displayStadtData(data);
                })
                .catch((error) => {
                    alert('Ein Fehler beim Laden der Daten ist aufgetreten. Bitte versuchen Sie es sp√§ter erneut.');
                    console.error('Error:', error);
                });
        }
        
        function fetchContactData() {
            fetch('https://pb02.toiwxr.easypanel.host/api/collections/contactForm/records', {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
                .then(response => response.json())
                .then(data => {
                    displayContactData(data);
                })
                .catch((error) => {
                    alert('Ein Fehler beim Laden der Daten ist aufgetreten. Bitte versuchen Sie es sp√§ter erneut.');
                    console.error('Error:', error);
                });
        }

        function displayTempData(data) {
            console.log(data)
            const items = data.items;

            const tableBodyElement = document.getElementById('tableBody');
            tableBodyElement.innerHTML = '';

            let innerHtml = '';
            for (let item of items) {
                innerHtml += `
                    <tr>
                        <td>${item.datum}</td>
                        <td>${item.hoechsteTemp}¬∞C</td>
                        <td>${item.tiefsteTemp}¬∞C</td>
                        <td>
                            <button class="action-btn edit-btn" onclick="bearbeiten('${item.id}')">‚úèÔ∏è Bearbeiten</button>
                            <button class="action-btn" onclick="loeschen('${item.id}')">üóëÔ∏è L√∂schen</button>
                        </td>
                    </tr>`;
            }
            tableBodyElement.innerHTML = innerHtml;
        }

        function displayStadtData(data) {
            console.log("data", data)
            const items = data.items;

            const tableBodyElement = document.getElementById('tableBody2');
            tableBodyElement.innerHTML = '';

            let innerHtml = '';
            for (let item of items) {
                innerHtml += `
                    <tr>
                        <td>${item.stadt}</td>
                        <td>${item.land}</td>
                        <td>
                            ${item.bild ? `<img src="https://pb02.toiwxr.easypanel.host/api/files/Ortschaft/${item.id}/${item.bild}" style="width: 80px; height: 60px; object-fit: cover; border-radius: 8px;">` : 'Kein Bild'}
                        </td>
                        <td>
                            <button class="action-btn edit-btn" onclick="bearbeiten2('${item.id}')">‚úèÔ∏è Bearbeiten</button>
                            <button class="action-btn" onclick="loeschen2('${item.id}')">üóëÔ∏è L√∂schen</button>
                        </td>
                    </tr>`;
            }
            tableBodyElement.innerHTML = innerHtml;
        }

        function displayContactData(data) {
            console.log(data)
            const items = data.items;

            const tableBodyElement = document.getElementById('tableBody3');
            tableBodyElement.innerHTML = '';

            let innerHtml = '';
            for (let item of items) {
                innerHtml += `
                    <tr>
                        <td>${item.name}</td>
                        <td>${item.email}</td>
                        <td>${item.message.substring(0, 100)}${item.message.length > 100 ? '...' : ''}</td>
                    </tr>`;
            }
            tableBodyElement.innerHTML = innerHtml;
        }
    
        function bearbeiten(itemId) {
            window.open('wettertemperatur.html?datumId=' + itemId, '_self');
        }

        function loeschen(itemId) {
            if (confirm('Sind Sie sicher, dass Sie diesen Eintrag l√∂schen m√∂chten?')) {
                fetch('https://pb02.toiwxr.easypanel.host/api/collections/Temperatur/records/' + itemId, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                    .then(data => {
                        alert('Item wurde erfolgreich gel√∂scht.');
                        fetchTempData(data);
                    })
                    .catch((error) => {
                        alert('Ein Fehler beim Laden der Daten ist aufgetreten. Bitte versuchen Sie es sp√§ter erneut.');
                        console.error('Error:', error);
                    });
            }
        }

        fetchTempData();
        
        function bearbeiten2(itemId) {
            window.open('wetterort.html?stadtId=' + itemId, '_self');
        }

        function loeschen2(itemId) {
            if (confirm('Sind Sie sicher, dass Sie diesen Eintrag l√∂schen m√∂chten?')) {
                fetch('https://pb02.toiwxr.easypanel.host/api/collections/Ortschaft/records/' + itemId, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                    .then(data => {
                        alert('Item wurde erfolgreich gel√∂scht.');
                        fetchStadtData(data);
                    })
                    .catch((error) => {
                        alert('Ein Fehler beim Laden der Daten ist aufgetreten. Bitte versuchen Sie es sp√§ter erneut.');
                        console.error('Error:', error);
                    });
            }
        }

        fetchStadtData();
        fetchContactData();

        function submitTempForm(event) {
            event.preventDefault();
            
            const data = createJsObjectFromHtmlForm(event);
            console.log(data);

            const jsonBody = JSON.stringify(data);

            fetch('https://pb02.toiwxr.easypanel.host/api/collections/Temperatur/records', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: jsonBody
            })
                .then(response => response.json())
                .then(data => {
                    alert('Temperatur erfolgreich hinzugef√ºgt! ‚úÖ');
                    document.getElementById('tempForm').reset();
                    fetchTempData();
                })
                .catch((error) => {
                    alert('Ein Fehler beim senden der Daten ist aufgetreten. Bitte versuchen Sie es sp√§ter erneut.')
                    console.error('Error:', error);
                });
        }

        function submitCityForm(event) {
            event.preventDefault();
            
            const formData = new FormData(event.target);
            
            fetch('https://pb02.toiwxr.easypanel.host/api/collections/Ortschaft/records', {
                method: 'POST',
                body: formData
            })
                .then(response => response.json())
                .then(data => {
                    alert('Stadt erfolgreich hinzugef√ºgt! ‚úÖ');
                    document.getElementById('cityForm').reset();
                    fetchStadtData();
                })
                .catch((error) => {
                    alert('Ein Fehler beim senden der Daten ist aufgetreten. Bitte versuchen Sie es sp√§ter erneut.')
                    console.error('Error:', error);
                });
        }

        function submitForm(event) {
            event.preventDefault();
            
            const data = createJsObjectFromHtmlForm(event);
            console.log(data);

            const jsonBody = JSON.stringify(data);

            if (item && item.id) {
                fetch('https://pb02.toiwxr.easypanel.host/api/collections/contactForm/records/' + item.id, {
                    method: 'PATCH',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: jsonBody
                })
                    .then(data => {
                        alert('Daten erfolgreich aktualisiert ‚úÖ');
                        document.getElementById('contactForm').reset();
                        fetchContactData();
                    })
                    .catch((error) => {
                        alert('Ein Fehler beim senden der Daten ist aufgetreten. Bitte versuchen Sie es sp√§ter erneut.')
                        console.error('Error:', error);
                    });
            } else {
                fetch('https://pb02.toiwxr.easypanel.host/api/collections/contactForm/records', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: jsonBody
                })
                    .then(response => response.json())
                    .then(data => {
                        alert('Nachricht erfolgreich gesendet! ‚úÖ');
                        document.getElementById('contactForm').reset();
                        fetchContactData();
                    })
                    .catch((error) => {
                        alert('Ein Fehler beim senden der Daten ist aufgetreten. Bitte versuchen Sie es sp√§ter erneut.')
                        console.error('Error:', error);
                    });
            }
        }  
        
        function createJsObjectFromHtmlForm(form) {
            const formData = new FormData(event.target);
            const data = {};

            for (let [key, value] of formData.entries()) {
                if (value === 'on') {
                    value = true;
                }
                if (value === 'off') {
                    value = false;
                }
                data[key] = value;
            }
            return data;
        }
    </script>

</body>

</html>
